{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport { DocumentsImpl } from \"./operations\";\n/** @internal */\nexport class SearchClient extends coreHttpCompat.ExtendedServiceClient {\n  /**\n   * Initializes a new instance of the SearchClient class.\n   * @param endpoint The endpoint URL of the search service.\n   * @param indexName The name of the index.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(endpoint, indexName, apiVersion, options) {\n    var _a, _b;\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n    if (indexName === undefined) {\n      throw new Error(\"'indexName' cannot be null\");\n    }\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n    const packageDetails = `azsdk-js-search-documents/12.0.0`;\n    const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}` : `${packageDetails}`;\n    const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), {\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri) !== null && _b !== void 0 ? _b : \"{endpoint}/indexes('{indexName}')\"\n    });\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n    this.indexName = indexName;\n    this.apiVersion = apiVersion;\n    this.documents = new DocumentsImpl(this);\n    this.addCustomApiVersionPolicy(apiVersion);\n  }\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  addCustomApiVersionPolicy(apiVersion) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(request, next) {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map(item => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n}","map":{"version":3,"names":["coreHttpCompat","DocumentsImpl","SearchClient","ExtendedServiceClient","constructor","endpoint","indexName","apiVersion","options","undefined","Error","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","Object","assign","_b","_a","baseUri","documents","addCustomApiVersionPolicy","apiVersionPolicy","name","sendRequest","request","next","param","url","split","length","newParams","map","item","indexOf","join","pipeline","addPolicy"],"sources":["C:\\Users\\julia\\Desktop\\cwb-slt\\search-website\\node_modules\\@azure\\search-documents\\src\\generated\\data\\searchClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport { DocumentsImpl } from \"./operations\";\nimport { Documents } from \"./operationsInterfaces\";\nimport { ApiVersion20231101, SearchClientOptionalParams } from \"./models\";\n\n/** @internal */\nexport class SearchClient extends coreHttpCompat.ExtendedServiceClient {\n  endpoint: string;\n  indexName: string;\n  apiVersion: ApiVersion20231101;\n\n  /**\n   * Initializes a new instance of the SearchClient class.\n   * @param endpoint The endpoint URL of the search service.\n   * @param indexName The name of the index.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    endpoint: string,\n    indexName: string,\n    apiVersion: ApiVersion20231101,\n    options?: SearchClientOptionalParams\n  ) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n    if (indexName === undefined) {\n      throw new Error(\"'indexName' cannot be null\");\n    }\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: SearchClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-search-documents/12.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ??\n        options.baseUri ??\n        \"{endpoint}/indexes('{indexName}')\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n    this.indexName = indexName;\n    this.apiVersion = apiVersion;\n    this.documents = new DocumentsImpl(this);\n    this.addCustomApiVersionPolicy(apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  documents: Documents;\n}\n"],"mappings":"AAAA;;;;;;;AAQA,OAAO,KAAKA,cAAc,MAAM,yBAAyB;AAMzD,SAASC,aAAa,QAAQ,cAAc;AAI5C;AACA,OAAM,MAAOC,YAAa,SAAQF,cAAc,CAACG,qBAAqB;EAKpE;;;;;;;EAOAC,YACEC,QAAgB,EAChBC,SAAiB,EACjBC,UAA8B,EAC9BC,OAAoC;;IAEpC,IAAIH,QAAQ,KAAKI,SAAS,EAAE;MAC1B,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;;IAE9C,IAAIJ,SAAS,KAAKG,SAAS,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;IAE/C,IAAIH,UAAU,KAAKE,SAAS,EAAE;MAC5B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;;IAGhD;IACA,IAAI,CAACF,OAAO,EAAE;MACZA,OAAO,GAAG,EAAE;;IAEd,MAAMG,QAAQ,GAA+B;MAC3CC,kBAAkB,EAAE;KACrB;IAED,MAAMC,cAAc,GAAG,kCAAkC;IACzD,MAAMC,eAAe,GACnBN,OAAO,CAACO,gBAAgB,IAAIP,OAAO,CAACO,gBAAgB,CAACD,eAAe,GAChE,GAAGN,OAAO,CAACO,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACpBP,QAAQ,GACRH,OAAO;MACVO,gBAAgB,EAAE;QAChBD;OACD;MACDT,QAAQ,EACN,CAAAc,EAAA,IAAAC,EAAA,GAAAZ,OAAO,CAACH,QAAQ,cAAAe,EAAA,cAAAA,EAAA,GAChBZ,OAAO,CAACa,OAAO,cAAAF,EAAA,cAAAA,EAAA,GACf;IAAmC,EACtC;IACD,KAAK,CAACH,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACX,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACe,SAAS,GAAG,IAAIrB,aAAa,CAAC,IAAI,CAAC;IACxC,IAAI,CAACsB,yBAAyB,CAAChB,UAAU,CAAC;EAC5C;EAEA;EACQgB,yBAAyBA,CAAChB,UAAmB;IACnD,IAAI,CAACA,UAAU,EAAE;MACf;;IAEF,MAAMiB,gBAAgB,GAAG;MACvBC,IAAI,EAAE,wBAAwB;MAC9B,MAAMC,WAAWA,CACfC,OAAwB,EACxBC,IAAiB;QAEjB,MAAMC,KAAK,GAAGF,OAAO,CAACG,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;QACpC,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;UACpB,MAAMC,SAAS,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAAEC,IAAI,IAAI;YACjD,IAAIA,IAAI,CAACC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;cACpC,OAAO,cAAc,GAAG7B,UAAU;aACnC,MAAM;cACL,OAAO4B,IAAI;;UAEf,CAAC,CAAC;UACFR,OAAO,CAACG,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGI,SAAS,CAACI,IAAI,CAAC,GAAG,CAAC;;QAEpD,OAAOT,IAAI,CAACD,OAAO,CAAC;MACtB;KACD;IACD,IAAI,CAACW,QAAQ,CAACC,SAAS,CAACf,gBAAgB,CAAC;EAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}