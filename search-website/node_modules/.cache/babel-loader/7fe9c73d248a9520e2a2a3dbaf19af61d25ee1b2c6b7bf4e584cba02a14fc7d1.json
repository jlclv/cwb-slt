{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\Desktop\\\\cwb-slt\\\\search-website\\\\src\\\\pages\\\\VectorSearch.js\",\n  _s = $RefreshSig$();\nimport SearchBar from \"../components/SearchBar\";\nimport StartupsList from \"../components/StartupsList\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VectorSearch() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [startups, setStartups] = useState([]);\n  const {\n    SearchClient,\n    AzureKeyCredential\n  } = require(\"@azure/search-documents\");\n  const {\n    OpenAI\n  } = require('openai');\n  const endpoint = process.env.REACT_APP_search_endpoint;\n  const indexName = process.env.REACT_APP_index_name;\n  const searchKey = process.env.REACT_APP_search_api_key;\n  const openapiKey = process.env.REACT_APP_openapi_key;\n  const client = new SearchClient(endpoint, indexName, new AzureKeyCredential(searchKey));\n  const openai = new OpenAI({\n    apiKey: openapiKey,\n    dangerouslyAllowBrowser: true\n  });\n  async function getEmbeddings(toVector) {\n    const embedding = await openai.embeddings.create({\n      model: \"text-embedding-ada-002\",\n      input: toVector\n    });\n    console.log(embedding.data[0].embedding);\n    return embedding.data[0].embedding;\n  }\n  useEffect(() => {\n    getStartupsVector();\n  }, []);\n  const getStartupsVector = async () => {\n    let startupList = [];\n    const searchResults = await client.search(\"*\", {\n      vectorSearchOptions: {\n        queries: [{\n          kind: \"vector\",\n          fields: [\"DescriptionVector\"],\n          kNearestNeighborsCount: 3,\n          vector: getEmbeddings(query)\n        }]\n      }\n    });\n    for await (const result of searchResults.results) {\n      startupList.push(result.document);\n      console.log(startupList);\n    }\n    //setStartups(startupList)\n  };\n  function handleChange(event) {\n    setQuery(event.target.value);\n  }\n  function handleSearch(event) {\n    event.preventDefault();\n    getStartupsVector();\n    console.log(query);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      onChange: handleChange,\n      onSubmit: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StartupsList, {\n      startups: startups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(VectorSearch, \"i2rlAto/LOTMFD2hbhTbi1vTPVo=\");\n_c = VectorSearch;\nexport default VectorSearch;\nvar _c;\n$RefreshReg$(_c, \"VectorSearch\");","map":{"version":3,"names":["SearchBar","StartupsList","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","VectorSearch","_s","query","setQuery","startups","setStartups","SearchClient","AzureKeyCredential","require","OpenAI","endpoint","process","env","REACT_APP_search_endpoint","indexName","REACT_APP_index_name","searchKey","REACT_APP_search_api_key","openapiKey","REACT_APP_openapi_key","client","openai","apiKey","dangerouslyAllowBrowser","getEmbeddings","toVector","embedding","embeddings","create","model","input","console","log","data","getStartupsVector","startupList","searchResults","search","vectorSearchOptions","queries","kind","fields","kNearestNeighborsCount","vector","result","results","push","document","handleChange","event","target","value","handleSearch","preventDefault","children","onChange","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/julia/Desktop/cwb-slt/search-website/src/pages/VectorSearch.js"],"sourcesContent":["import SearchBar from \"../components/SearchBar\";\r\nimport StartupsList from \"../components/StartupsList\";\r\nimport { useState,useEffect } from \"react\";\r\n\r\nfunction VectorSearch() {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [startups, setStartups] = useState([]);\r\n    \r\n    const { SearchClient, AzureKeyCredential } = require(\"@azure/search-documents\");\r\n    const {OpenAI} = require('openai');\r\n\r\n    const endpoint = process.env.REACT_APP_search_endpoint;\r\n    const indexName = process.env.REACT_APP_index_name;\r\n    const searchKey = process.env.REACT_APP_search_api_key;\r\n    const openapiKey = process.env.REACT_APP_openapi_key;\r\n\r\n    const client = new SearchClient(endpoint, indexName, new AzureKeyCredential(searchKey));\r\n    const openai = new OpenAI({apiKey: openapiKey, dangerouslyAllowBrowser: true});\r\n\r\n    async function getEmbeddings(toVector) {\r\n        const embedding = await openai.embeddings.create({\r\n          model: \"text-embedding-ada-002\",\r\n          input: toVector,\r\n        });\r\n        console.log(embedding.data[0].embedding);\r\n        return (embedding.data[0].embedding);\r\n      }\r\n\r\n    useEffect(() => {\r\n        getStartupsVector()\r\n    }, []);\r\n\r\n    const getStartupsVector = async() => {\r\n        let startupList = [];\r\n        const searchResults = await client.search(\"*\", {\r\n            vectorSearchOptions: {\r\n              queries: [\r\n                {\r\n                  kind: \"vector\",\r\n                  fields: [\"DescriptionVector\"],\r\n                  kNearestNeighborsCount: 3,\r\n                  vector: getEmbeddings(query),\r\n                }\r\n              ],\r\n            },\r\n          });\r\n      \r\n          for await (const result of searchResults.results) {\r\n            startupList.push(result.document)   \r\n            console.log(startupList)\r\n          }\r\n          //setStartups(startupList)\r\n    }\r\n    \r\n    function handleChange(event) {\r\n        setQuery(event.target.value);\r\n    }\r\n\r\n    function handleSearch(event) {\r\n        event.preventDefault();\r\n        getStartupsVector()\r\n        console.log(query);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <SearchBar query={query} onChange={handleChange} onSubmit={handleSearch} />\r\n            <StartupsList startups={startups}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VectorSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}