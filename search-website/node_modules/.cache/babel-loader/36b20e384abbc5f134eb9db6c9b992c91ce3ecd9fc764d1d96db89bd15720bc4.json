{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\n/**\n * Represents a geographic point in global coordinates.\n */\nexport default class GeographyPoint {\n  /**\n   * Constructs a new instance of GeographyPoint given\n   * the specified coordinates.\n   * @param geographyPoint - object with longitude and latitude values in decimal\n   */\n  constructor(geographyPoint) {\n    this.longitude = geographyPoint.longitude;\n    this.latitude = geographyPoint.latitude;\n  }\n  /**\n   * Used to serialize to a GeoJSON Point.\n   */\n  toJSON() {\n    return {\n      type: \"Point\",\n      coordinates: [this.longitude, this.latitude],\n      crs: {\n        type: \"name\",\n        properties: {\n          name: WorldGeodeticSystem1984\n        }\n      }\n    };\n  }\n}","map":{"version":3,"names":["WorldGeodeticSystem1984","GeographyPoint","constructor","geographyPoint","longitude","latitude","toJSON","type","coordinates","crs","properties","name"],"sources":["C:\\Users\\julia\\Desktop\\cwb-slt\\search-website\\node_modules\\@azure\\search-documents\\src\\geographyPoint.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\n\n/**\n * Represents a geographic point in global coordinates.\n */\nexport default class GeographyPoint {\n  /**\n   * The latitude in decimal.\n   */\n  public latitude: number;\n  /**\n   * The longitude in decimal.\n   */\n  public longitude: number;\n\n  /**\n   * Constructs a new instance of GeographyPoint given\n   * the specified coordinates.\n   * @param geographyPoint - object with longitude and latitude values in decimal\n   */\n  constructor(geographyPoint: { longitude: number; latitude: number }) {\n    this.longitude = geographyPoint.longitude;\n    this.latitude = geographyPoint.latitude;\n  }\n\n  /**\n   * Used to serialize to a GeoJSON Point.\n   */\n  public toJSON(): Record<string, unknown> {\n    return {\n      type: \"Point\",\n      coordinates: [this.longitude, this.latitude],\n      crs: { type: \"name\", properties: { name: WorldGeodeticSystem1984 } },\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,MAAMA,uBAAuB,GAAG,WAAW,CAAC,CAAC;AAE7C;;;AAGA,eAAc,MAAOC,cAAc;EAUjC;;;;;EAKAC,YAAYC,cAAuD;IACjE,IAAI,CAACC,SAAS,GAAGD,cAAc,CAACC,SAAS;IACzC,IAAI,CAACC,QAAQ,GAAGF,cAAc,CAACE,QAAQ;EACzC;EAEA;;;EAGOC,MAAMA,CAAA;IACX,OAAO;MACLC,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE,CAAC,IAAI,CAACJ,SAAS,EAAE,IAAI,CAACC,QAAQ,CAAC;MAC5CI,GAAG,EAAE;QAAEF,IAAI,EAAE,MAAM;QAAEG,UAAU,EAAE;UAAEC,IAAI,EAAEX;QAAuB;MAAE;KACnE;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}