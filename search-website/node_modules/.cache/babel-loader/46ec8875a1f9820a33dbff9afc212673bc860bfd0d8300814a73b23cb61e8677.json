{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class containing Skillsets operations. */\nexport class SkillsetsImpl {\n  /**\n   * Initialize a new instance of the class Skillsets class.\n   * @param client Reference to the service client\n   */\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * Creates a new skillset in a search service or updates the skillset if it already exists.\n   * @param skillsetName The name of the skillset to create or update.\n   * @param skillset The skillset containing one or more skills to create or update in a search service.\n   * @param options The options parameters.\n   */\n  createOrUpdate(skillsetName, skillset, options) {\n    return this.client.sendOperationRequest({\n      skillsetName,\n      skillset,\n      options\n    }, createOrUpdateOperationSpec);\n  }\n  /**\n   * Deletes a skillset in a search service.\n   * @param skillsetName The name of the skillset to delete.\n   * @param options The options parameters.\n   */\n  delete(skillsetName, options) {\n    return this.client.sendOperationRequest({\n      skillsetName,\n      options\n    }, deleteOperationSpec);\n  }\n  /**\n   * Retrieves a skillset in a search service.\n   * @param skillsetName The name of the skillset to retrieve.\n   * @param options The options parameters.\n   */\n  get(skillsetName, options) {\n    return this.client.sendOperationRequest({\n      skillsetName,\n      options\n    }, getOperationSpec);\n  }\n  /**\n   * List all skillsets in a search service.\n   * @param options The options parameters.\n   */\n  list(options) {\n    return this.client.sendOperationRequest({\n      options\n    }, listOperationSpec);\n  }\n  /**\n   * Creates a new skillset in a search service.\n   * @param skillset The skillset containing one or more skills to create in a search service.\n   * @param options The options parameters.\n   */\n  create(skillset, options) {\n    return this.client.sendOperationRequest({\n      skillset,\n      options\n    }, createOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */false);\nconst createOrUpdateOperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    201: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  requestBody: Parameters.skillset,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [Parameters.contentType, Parameters.accept, Parameters.ifMatch, Parameters.ifNoneMatch, Parameters.prefer],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [Parameters.accept, Parameters.ifMatch, Parameters.ifNoneMatch],\n  serializer\n};\nconst getOperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec = {\n  path: \"/skillsets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSkillsetsResult\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec = {\n  path: \"/skillsets\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  requestBody: Parameters.skillset,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};","map":{"version":3,"names":["coreClient","Mappers","Parameters","SkillsetsImpl","constructor","client","createOrUpdate","skillsetName","skillset","options","sendOperationRequest","createOrUpdateOperationSpec","delete","deleteOperationSpec","get","getOperationSpec","list","listOperationSpec","create","createOperationSpec","serializer","createSerializer","path","httpMethod","responses","bodyMapper","SearchIndexerSkillset","default","SearchError","requestBody","queryParameters","apiVersion","urlParameters","endpoint","headerParameters","contentType","accept","ifMatch","ifNoneMatch","prefer","mediaType","ListSkillsetsResult","select"],"sources":["C:\\Users\\julia\\Desktop\\cwb-slt\\search-website\\node_modules\\@azure\\search-documents\\src\\generated\\service\\operations\\skillsets.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Skillsets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SearchServiceClient } from \"../searchServiceClient\";\nimport {\n  SearchIndexerSkillset,\n  SkillsetsCreateOrUpdateOptionalParams,\n  SkillsetsCreateOrUpdateResponse,\n  SkillsetsDeleteOptionalParams,\n  SkillsetsGetOptionalParams,\n  SkillsetsGetResponse,\n  SkillsetsListOptionalParams,\n  SkillsetsListResponse,\n  SkillsetsCreateOptionalParams,\n  SkillsetsCreateResponse\n} from \"../models\";\n\n/** Class containing Skillsets operations. */\nexport class SkillsetsImpl implements Skillsets {\n  private readonly client: SearchServiceClient;\n\n  /**\n   * Initialize a new instance of the class Skillsets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SearchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new skillset in a search service or updates the skillset if it already exists.\n   * @param skillsetName The name of the skillset to create or update.\n   * @param skillset The skillset containing one or more skills to create or update in a search service.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    skillsetName: string,\n    skillset: SearchIndexerSkillset,\n    options?: SkillsetsCreateOrUpdateOptionalParams\n  ): Promise<SkillsetsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { skillsetName, skillset, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a skillset in a search service.\n   * @param skillsetName The name of the skillset to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    skillsetName: string,\n    options?: SkillsetsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { skillsetName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves a skillset in a search service.\n   * @param skillsetName The name of the skillset to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    skillsetName: string,\n    options?: SkillsetsGetOptionalParams\n  ): Promise<SkillsetsGetResponse> {\n    return this.client.sendOperationRequest(\n      { skillsetName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * List all skillsets in a search service.\n   * @param options The options parameters.\n   */\n  list(options?: SkillsetsListOptionalParams): Promise<SkillsetsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Creates a new skillset in a search service.\n   * @param skillset The skillset containing one or more skills to create in a search service.\n   * @param options The options parameters.\n   */\n  create(\n    skillset: SearchIndexerSkillset,\n    options?: SkillsetsCreateOptionalParams\n  ): Promise<SkillsetsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { skillset, options },\n      createOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    201: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  requestBody: Parameters.skillset,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/skillsets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSkillsetsResult\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/skillsets\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  requestBody: Parameters.skillset,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}