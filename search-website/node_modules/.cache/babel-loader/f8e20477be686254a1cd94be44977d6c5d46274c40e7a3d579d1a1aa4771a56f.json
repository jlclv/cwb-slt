{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport { DataSourcesImpl, IndexersImpl, SkillsetsImpl, SynonymMapsImpl, IndexesImpl } from \"./operations\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\n/** @internal */\nexport class SearchServiceClient extends coreHttpCompat.ExtendedServiceClient {\n  /**\n   * Initializes a new instance of the SearchServiceClient class.\n   * @param endpoint The endpoint URL of the search service.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(endpoint, apiVersion, options) {\n    var _a, _b;\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n    const packageDetails = `azsdk-js-search-documents/12.0.0`;\n    const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}` : `${packageDetails}`;\n    const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), {\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri) !== null && _b !== void 0 ? _b : \"{endpoint}\"\n    });\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n    this.apiVersion = apiVersion;\n    this.dataSources = new DataSourcesImpl(this);\n    this.indexers = new IndexersImpl(this);\n    this.skillsets = new SkillsetsImpl(this);\n    this.synonymMaps = new SynonymMapsImpl(this);\n    this.indexes = new IndexesImpl(this);\n    this.addCustomApiVersionPolicy(apiVersion);\n  }\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  addCustomApiVersionPolicy(apiVersion) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(request, next) {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map(item => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n  /**\n   * Gets service level statistics for a search service.\n   * @param options The options parameters.\n   */\n  getServiceStatistics(options) {\n    return this.sendOperationRequest({\n      options\n    }, getServiceStatisticsOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */false);\nconst getServiceStatisticsOperationSpec = {\n  path: \"/servicestats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceStatistics\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer\n};","map":{"version":3,"names":["coreClient","coreHttpCompat","DataSourcesImpl","IndexersImpl","SkillsetsImpl","SynonymMapsImpl","IndexesImpl","Parameters","Mappers","SearchServiceClient","ExtendedServiceClient","constructor","endpoint","apiVersion","options","undefined","Error","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","Object","assign","_b","_a","baseUri","dataSources","indexers","skillsets","synonymMaps","indexes","addCustomApiVersionPolicy","apiVersionPolicy","name","sendRequest","request","next","param","url","split","length","newParams","map","item","indexOf","join","pipeline","addPolicy","getServiceStatistics","sendOperationRequest","getServiceStatisticsOperationSpec","serializer","createSerializer","path","httpMethod","responses","bodyMapper","ServiceStatistics","default","SearchError","queryParameters","urlParameters","headerParameters","accept"],"sources":["C:\\Users\\julia\\Desktop\\cwb-slt\\search-website\\node_modules\\@azure\\search-documents\\src\\generated\\service\\searchServiceClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport {\n  DataSourcesImpl,\n  IndexersImpl,\n  SkillsetsImpl,\n  SynonymMapsImpl,\n  IndexesImpl\n} from \"./operations\";\nimport {\n  DataSources,\n  Indexers,\n  Skillsets,\n  SynonymMaps,\n  Indexes\n} from \"./operationsInterfaces\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  ApiVersion20231101,\n  SearchServiceClientOptionalParams,\n  GetServiceStatisticsOptionalParams,\n  GetServiceStatisticsResponse\n} from \"./models\";\n\n/** @internal */\nexport class SearchServiceClient extends coreHttpCompat.ExtendedServiceClient {\n  endpoint: string;\n  apiVersion: ApiVersion20231101;\n\n  /**\n   * Initializes a new instance of the SearchServiceClient class.\n   * @param endpoint The endpoint URL of the search service.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    endpoint: string,\n    apiVersion: ApiVersion20231101,\n    options?: SearchServiceClientOptionalParams\n  ) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: SearchServiceClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-search-documents/12.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{endpoint}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n    this.apiVersion = apiVersion;\n    this.dataSources = new DataSourcesImpl(this);\n    this.indexers = new IndexersImpl(this);\n    this.skillsets = new SkillsetsImpl(this);\n    this.synonymMaps = new SynonymMapsImpl(this);\n    this.indexes = new IndexesImpl(this);\n    this.addCustomApiVersionPolicy(apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Gets service level statistics for a search service.\n   * @param options The options parameters.\n   */\n  getServiceStatistics(\n    options?: GetServiceStatisticsOptionalParams\n  ): Promise<GetServiceStatisticsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getServiceStatisticsOperationSpec\n    );\n  }\n\n  dataSources: DataSources;\n  indexers: Indexers;\n  skillsets: Skillsets;\n  synonymMaps: SynonymMaps;\n  indexes: Indexes;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getServiceStatisticsOperationSpec: coreClient.OperationSpec = {\n  path: \"/servicestats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceStatistics\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}