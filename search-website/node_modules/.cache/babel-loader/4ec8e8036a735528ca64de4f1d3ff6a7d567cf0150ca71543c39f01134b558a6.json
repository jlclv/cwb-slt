{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { SearchIndexerDataSource as SearchIndexerDataSourceMapper, SearchIndexer as SearchIndexerMapper, SearchIndexerSkillset as SearchIndexerSkillsetMapper, SynonymMap as SynonymMapMapper, SearchIndex as SearchIndexMapper, AnalyzeRequest as AnalyzeRequestMapper } from \"../models/mappers\";\nexport const contentType = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const dataSource = {\n  parameterPath: \"dataSource\",\n  mapper: SearchIndexerDataSourceMapper\n};\nexport const accept = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const dataSourceName = {\n  parameterPath: \"dataSourceName\",\n  mapper: {\n    serializedName: \"dataSourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifNoneMatch = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prefer = {\n  parameterPath: \"prefer\",\n  mapper: {\n    defaultValue: \"return=representation\",\n    isConstant: true,\n    serializedName: \"Prefer\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const select = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const indexerName = {\n  parameterPath: \"indexerName\",\n  mapper: {\n    serializedName: \"indexerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const indexer = {\n  parameterPath: \"indexer\",\n  mapper: SearchIndexerMapper\n};\nexport const skillset = {\n  parameterPath: \"skillset\",\n  mapper: SearchIndexerSkillsetMapper\n};\nexport const skillsetName = {\n  parameterPath: \"skillsetName\",\n  mapper: {\n    serializedName: \"skillsetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const synonymMap = {\n  parameterPath: \"synonymMap\",\n  mapper: SynonymMapMapper\n};\nexport const synonymMapName = {\n  parameterPath: \"synonymMapName\",\n  mapper: {\n    serializedName: \"synonymMapName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const index = {\n  parameterPath: \"index\",\n  mapper: SearchIndexMapper\n};\nexport const indexName = {\n  parameterPath: \"indexName\",\n  mapper: {\n    serializedName: \"indexName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const allowIndexDowntime = {\n  parameterPath: [\"options\", \"allowIndexDowntime\"],\n  mapper: {\n    serializedName: \"allowIndexDowntime\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const request = {\n  parameterPath: \"request\",\n  mapper: AnalyzeRequestMapper\n};","map":{"version":3,"names":["SearchIndexerDataSource","SearchIndexerDataSourceMapper","SearchIndexer","SearchIndexerMapper","SearchIndexerSkillset","SearchIndexerSkillsetMapper","SynonymMap","SynonymMapMapper","SearchIndex","SearchIndexMapper","AnalyzeRequest","AnalyzeRequestMapper","contentType","parameterPath","mapper","defaultValue","isConstant","serializedName","type","name","dataSource","accept","endpoint","required","skipEncoding","dataSourceName","ifMatch","ifNoneMatch","prefer","apiVersion","select","indexerName","indexer","skillset","skillsetName","synonymMap","synonymMapName","index","indexName","allowIndexDowntime","request"],"sources":["C:\\Users\\julia\\Desktop\\cwb-slt\\search-website\\node_modules\\@azure\\search-documents\\src\\generated\\service\\models\\parameters.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  SearchIndexerDataSource as SearchIndexerDataSourceMapper,\n  SearchIndexer as SearchIndexerMapper,\n  SearchIndexerSkillset as SearchIndexerSkillsetMapper,\n  SynonymMap as SynonymMapMapper,\n  SearchIndex as SearchIndexMapper,\n  AnalyzeRequest as AnalyzeRequestMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const dataSource: OperationParameter = {\n  parameterPath: \"dataSource\",\n  mapper: SearchIndexerDataSourceMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const dataSourceName: OperationURLParameter = {\n  parameterPath: \"dataSourceName\",\n  mapper: {\n    serializedName: \"dataSourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prefer: OperationParameter = {\n  parameterPath: \"prefer\",\n  mapper: {\n    defaultValue: \"return=representation\",\n    isConstant: true,\n    serializedName: \"Prefer\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const select: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const indexerName: OperationURLParameter = {\n  parameterPath: \"indexerName\",\n  mapper: {\n    serializedName: \"indexerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const indexer: OperationParameter = {\n  parameterPath: \"indexer\",\n  mapper: SearchIndexerMapper\n};\n\nexport const skillset: OperationParameter = {\n  parameterPath: \"skillset\",\n  mapper: SearchIndexerSkillsetMapper\n};\n\nexport const skillsetName: OperationURLParameter = {\n  parameterPath: \"skillsetName\",\n  mapper: {\n    serializedName: \"skillsetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const synonymMap: OperationParameter = {\n  parameterPath: \"synonymMap\",\n  mapper: SynonymMapMapper\n};\n\nexport const synonymMapName: OperationURLParameter = {\n  parameterPath: \"synonymMapName\",\n  mapper: {\n    serializedName: \"synonymMapName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const index: OperationParameter = {\n  parameterPath: \"index\",\n  mapper: SearchIndexMapper\n};\n\nexport const indexName: OperationURLParameter = {\n  parameterPath: \"indexName\",\n  mapper: {\n    serializedName: \"indexName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const allowIndexDowntime: OperationQueryParameter = {\n  parameterPath: [\"options\", \"allowIndexDowntime\"],\n  mapper: {\n    serializedName: \"allowIndexDowntime\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const request: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: AnalyzeRequestMapper\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}